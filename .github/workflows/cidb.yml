name: Angular Build and deploy Pipeline

on: 
  push:
    branches:
      - master
      
jobs:
  web-deploy:
    name: Build and Deploy Angular App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_ENV
      - name: Set release name as env variable
        run: echo "RELEASE_NAME=release_client-$NOW" >> $GITHUB_ENV
      - name: Echo release name
        run: echo $RELEASE_NAME

      - name: Generate release tag
        id: generate_release_tag
        uses: amitsingh-007/next-release-tag@v5.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: 'v'
          tag_template: 'yyyy.mm.dd.i'

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.generate_release_tag.outputs.next_release_tag }}
          generateReleaseNotes: true
          makeLatest: true   
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/notification-universe:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/notification-universe:latest

     
    # - name: Get latest code
    #   uses: actions/checkout@v2.3.2

    # - name: Use Node.js 18.17.1 LTS
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: '18.17.1'
    
    # - name: Set env variables
    #   run: node server.js 
    #   env:
    #     APP_SETTINGS: ${{ secrets.APP_SETTINGS }}
      
    # - name: Install NPM Modules
    #   run: npm install

    # - name: Build Project
    #   run: npm run build:prod

    # - name: upload artifact
    #   uses: actions/upload-artifact@v2
    #   with:
        # name: up
    #    path: ./dist/portfolio/

    # - name: Sync Files
    #   uses: SamKirkland/FTP-Deploy-Action@2.0.0
    #   env:
    #     FTP_SERVER: ${{ secrets.SERVER_FTP_HOST }}
    #     FTP_USERNAME: ${{ secrets.SERVER_FTP_USERNAME }}
    #     FTP_PASSWORD: ${{ secrets.SERVER_FTP_PASSWORD }}
    #     PORT: 22
    #     METHOD: sftp
    #     LOCAL_DIR: ./dist/portfolio/
    #     REMOTE_DIR: ${{ secrets.SERVER_FTP_DIR }}
    #     ARGS: --verbose
    
    

    
